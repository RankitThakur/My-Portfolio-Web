import { useRef, useEffect, useState } from "react";
import { motion, useInView, animate } from "framer-motion";
import Headline2 from "./Headline2";

const Skills = () => {
    return (
        <div className="w-full bg-background">
            <div className="container px-4 pt-10 pb-16 mx-auto lg:px-40">
                <Headline2 text="Skills" />
                <SkillSection title="Programming Languages">
                    <Skill
                        icon={
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                aria-label="JavaScript"
                                viewBox="0 0 512 512"
                                className="w-4"
                            >
                                <rect width="512" height="512" fill="#f7df1e" rx="15%" />
                                <path d="m324,370c10,17 24,29 47,29 20,0 33,-10 33,-24 0,-16 -13,-22 -35,-32l-12,-5c-35,-15 -58,-33 -58,-72 0,-36 27,-64 70,-64 31,0 53,11 68,39l-37,24c-8,-15 -17,-21 -31,-21 -14,0 -23,9 -23,21 0,14 9,20 30,29l12,5c41,18 64,35 64,76 0,43 -34,67 -80,67 -45,0 -74,-21 -88,-49zm-170,4c8,13 14,25 31,25 16,0 26,-6 26,-30V203h48v164c0,50 -29,72 -72,72 -39,0 -61,-20 -72,-44z" />
                            </svg>
                        }
                        name="JavaScript"
                        percentage={90}
                    />
                    <Skill
                        icon={
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 48 48"
                                className="w-6"
                            >
                                <rect width="36" height="36" x="6" y="6" fill="#1976d2" />
                                <polygon
                                    fill="#fff"
                                    points="27.49,22 14.227,22 14.227,25.264 18.984,25.264 18.984,40 22.753,40 22.753,25.264 27.49,25.264"
                                />
                                <path
                                    fill="#fff"
                                    d="M39.194,26.084c0,0-1.787-1.192-3.807-1.192s-2.747,0.96-2.747,1.986 c0,2.648,7.381,2.383,7.381,7.712c0,8.209-11.254,4.568-11.254,4.568V35.22c0,0,2.152,1.622,4.733,1.622s2.483-1.688,2.483-1.92 c0-2.449-7.315-2.449-7.315-7.878c0-7.381,10.658-4.469,10.658-4.469L39.194,26.084z"
                                />
                            </svg>
                        }
                        name="TypeScript"
                        percentage={95}
                    />
                    <Skill
                        icon={
                            <svg
                                fill="none"
                                className="w-5 h-5"
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="0 0 124 141.53199999999998"
                            >
                                <path
                                    d="M10.383 126.894L0 0l124 .255-10.979 126.639-50.553 14.638z"
                                    fill="#e34f26"
                                />
                                <path
                                    d="M62.468 129.277V12.085l51.064.17-9.106 104.851z"
                                    fill="#ef652a"
                                />
                                <path
                                    d="M99.49 41.362l1.446-15.49H22.383l4.34 47.49h54.213L78.81 93.617l-17.362 4.68-17.617-5.106-.936-12.085H27.319l2.128 24.681 32 8.936 32.255-8.936 4.34-48.17H41.107L39.49 41.362z"
                                    fill="#fff"
                                />
                            </svg>
                        }
                        name="HTML5 & CSS3"
                        percentage={85}
                    />
                </SkillSection>
                <SkillSection title="Frameworks">
                    <Skill
                        icon={
                            <svg viewBox="0 0 256 256" version="1.1" className="w-5">
                                <g>
                                    <path
                                        d="M119.616813,0.0688905149 C119.066276,0.118932037 117.314565,0.294077364 115.738025,0.419181169 C79.3775171,3.69690087 45.3192571,23.3131775 23.7481916,53.4631946 C11.7364614,70.2271045 4.05395894,89.2428829 1.15112414,109.384595 C0.12512219,116.415429 0,118.492153 0,128.025062 C0,137.557972 0.12512219,139.634696 1.15112414,146.665529 C8.10791789,194.730411 42.3163245,235.11392 88.7116325,250.076335 C97.0197458,252.753556 105.778299,254.580072 115.738025,255.680985 C119.616813,256.106338 136.383187,256.106338 140.261975,255.680985 C157.453763,253.779407 172.017986,249.525878 186.382014,242.194795 C188.584164,241.068861 189.00958,240.768612 188.709286,240.518404 C188.509091,240.36828 179.124927,227.782837 167.86393,212.570214 L147.393939,184.922273 L121.743891,146.965779 C107.630108,126.098464 96.0187683,109.034305 95.9186706,109.034305 C95.8185728,109.009284 95.7184751,125.873277 95.6684262,146.465363 C95.5933529,182.52028 95.5683284,183.971484 95.1178886,184.82219 C94.4672532,186.048207 93.9667644,186.548623 92.915738,187.099079 C92.114956,187.499411 91.4142717,187.574474 87.6355816,187.574474 L83.3063539,187.574474 L82.1552297,186.848872 C81.4044966,186.373477 80.8539589,185.747958 80.4785924,185.022356 L79.9530792,183.896422 L80.0031281,133.729796 L80.0782014,83.5381493 L80.8539589,82.5623397 C81.25435,82.0369037 82.1051808,81.3613431 82.7057674,81.0360732 C83.7317693,80.535658 84.1321603,80.4856165 88.4613881,80.4856165 C93.5663734,80.4856165 94.4172043,80.6857826 95.7434995,82.1369867 C96.1188661,82.5373189 110.007429,103.454675 126.623656,128.650581 C143.239883,153.846488 165.962072,188.250034 177.122972,205.139048 L197.392766,235.839522 L198.418768,235.163961 C207.502639,229.259062 217.112025,220.852086 224.719453,212.09482 C240.910264,193.504394 251.345455,170.835585 254.848876,146.665529 C255.874878,139.634696 256,137.557972 256,128.025062 C256,118.492153 255.874878,116.415429 254.848876,109.384595 C247.892082,61.3197135 213.683675,20.9362052 167.288368,5.97379012 C159.105376,3.32158945 150.396872,1.49507389 140.637341,0.394160408 C138.234995,0.143952798 121.693842,-0.131275573 119.616813,0.0688905149 L119.616813,0.0688905149 Z M172.017986,77.4831252 C173.219159,78.0836234 174.195112,79.2345784 174.545455,80.435575 C174.74565,81.0861148 174.795699,94.9976579 174.74565,126.348671 L174.670577,171.336 L166.73783,159.17591 L158.780059,147.01582 L158.780059,114.313685 C158.780059,93.1711423 158.880156,81.2862808 159.030303,80.7108033 C159.430694,79.3096407 160.306549,78.2087272 161.507722,77.5581875 C162.533724,77.0327515 162.909091,76.98271 166.837928,76.98271 C170.541544,76.98271 171.19218,77.0327515 172.017986,77.4831252 Z"
                                        fill="#fff"
                                    ></path>
                                </g>
                            </svg>
                        }
                        name="Next.js"
                        percentage={90}
                    />
                    <Skill
                        icon={
                            <svg
                                className="w-5"
                                viewBox="-13 0 282 282"
                                xmlns="http://www.w3.org/2000/svg"
                            >
                                <g fill="#8CC84B">
                                    <path d="M116.504 3.58c6.962-3.985 16.03-4.003 22.986 0 34.995 19.774 70.001 39.517 104.99 59.303 6.581 3.707 10.983 11.031 10.916 18.614v118.968c.049 7.897-4.788 15.396-11.731 19.019-34.88 19.665-69.742 39.354-104.616 59.019-7.106 4.063-16.356 3.75-23.24-.646-10.457-6.062-20.932-12.094-31.39-18.15-2.137-1.274-4.546-2.288-6.055-4.36 1.334-1.798 3.719-2.022 5.657-2.807 4.365-1.388 8.374-3.616 12.384-5.778 1.014-.694 2.252-.428 3.224.193 8.942 5.127 17.805 10.403 26.777 15.481 1.914 1.105 3.852-.362 5.488-1.274 34.228-19.345 68.498-38.617 102.72-57.968 1.268-.61 1.969-1.956 1.866-3.345.024-39.245.006-78.497.012-117.742.145-1.576-.767-3.025-2.192-3.67-34.759-19.575-69.5-39.18-104.253-58.76a3.621 3.621 0 0 0-4.094-.006C91.2 39.257 56.465 58.88 21.712 78.454c-1.42.646-2.373 2.071-2.204 3.653.006 39.245 0 78.497 0 117.748a3.329 3.329 0 0 0 1.89 3.303c9.274 5.259 18.56 10.481 27.84 15.722 5.228 2.814 11.647 4.486 17.407 2.33 5.083-1.823 8.646-7.01 8.549-12.407.048-39.016-.024-78.038.036-117.048-.127-1.732 1.516-3.163 3.2-3 4.456-.03 8.918-.06 13.374.012 1.86-.042 3.14 1.823 2.91 3.568-.018 39.263.048 78.527-.03 117.79.012 10.464-4.287 21.85-13.966 26.97-11.924 6.177-26.662 4.867-38.442-1.056-10.198-5.09-19.93-11.097-29.947-16.55C5.368 215.886.555 208.357.604 200.466V81.497c-.073-7.74 4.504-15.197 11.29-18.85C46.768 42.966 81.636 23.27 116.504 3.58z" />
                                    <path d="M146.928 85.99c15.21-.979 31.493-.58 45.18 6.913 10.597 5.742 16.472 17.793 16.659 29.566-.296 1.588-1.956 2.464-3.472 2.355-4.413-.006-8.827.06-13.24-.03-1.872.072-2.96-1.654-3.195-3.309-1.268-5.633-4.34-11.212-9.642-13.929-8.139-4.075-17.576-3.87-26.451-3.785-6.479.344-13.446.905-18.935 4.715-4.214 2.886-5.494 8.712-3.99 13.404 1.418 3.369 5.307 4.456 8.489 5.458 18.33 4.794 37.754 4.317 55.734 10.626 7.444 2.572 14.726 7.572 17.274 15.366 3.333 10.446 1.872 22.932-5.56 31.318-6.027 6.901-14.805 10.657-23.56 12.697-11.647 2.597-23.734 2.663-35.562 1.51-11.122-1.268-22.696-4.19-31.282-11.768-7.342-6.375-10.928-16.308-10.572-25.895.085-1.619 1.697-2.748 3.248-2.615 4.444-.036 8.888-.048 13.332.006 1.775-.127 3.091 1.407 3.182 3.08.82 5.367 2.837 11 7.517 14.182 9.032 5.827 20.365 5.428 30.707 5.591 8.568-.38 18.186-.495 25.178-6.158 3.689-3.23 4.782-8.634 3.785-13.283-1.08-3.925-5.186-5.754-8.712-6.95-18.095-5.724-37.736-3.647-55.656-10.12-7.275-2.571-14.31-7.432-17.105-14.906-3.9-10.578-2.113-23.662 6.098-31.765 8.006-8.06 19.563-11.164 30.551-12.275z" />
                                </g>
                            </svg>
                        }
                        name="Angular"
                        percentage={90}
                    />
                    <Skill
                        icon={
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                viewBox="-11.5 -10.23174 23 20.46348"
                                className="w-5 h-5"
                            >
                                <circle cx="0" cy="0" r="2.05" fill="#61dafb" />
                                <g stroke="#61dafb" strokeWidth="1" fill="none">
                                    <ellipse rx="11" ry="4.2" />
                                    <ellipse rx="11" ry="4.2" transform="rotate(60)" />
                                    <ellipse rx="11" ry="4.2" transform="rotate(120)" />
                                </g>
                            </svg>
                        }
                        name="React"
                        percentage={95}
                    />
                </SkillSection>
            </div>
        </div>
    );
};

interface SkillSectionProps {
    title: string;
    children: React.ReactNode;
}

const SkillSection: React.FC<SkillSectionProps> = ({ title, children }) => {
    return (
        <>
            <h3 className="pl-3 mt-8 font-semibold border-l-[0.24rem] border-l-neonGreen text-lg">
                {title}
            </h3>
            <div className="flex flex-row flex-wrap items-center justify-between">
                {children}
            </div>
        </>
    );
};

interface SkillProps {
    name: string;
    icon: React.ReactNode;
    percentage: number;
}

const Skill: React.FC<SkillProps> = ({ name, icon, percentage }) => {
    const spanref = useRef<HTMLSpanElement>(null);
    const ref = useRef(null);
    const isInView = useInView(ref);
    const [hasRendered, setHasRendered] = useState(false);

    useEffect(() => {
        if (!isInView || hasRendered == true) return;
        const controls = animate(0, percentage, {
            duration: 0.5,
            onUpdate(value) {
                if (!spanref.current) return;
                spanref.current.textContent = value.toFixed(0) + "%";
            },
            onComplete() {
                setHasRendered(true);
            },
        });
        return () => controls.stop();
    }, [isInView, hasRendered, percentage]);

    return (
        <div className="w-full sm:w-[43%] mt-6 ml-6 mr-8 sm:mx-0" ref={ref}>
            <div className="flex flex-col space-y-2">
                <motion.div
                    className="flex flex-row items-centerspace-x-3"
                    whileInView={{ translateY: 0, opacity: 1 }}
                    viewport={{ once: true }}
                    initial={{ translateY: -30, opacity: 0 }}
                    transition={{
                        duration: 0.2,
                        delay: 0.2,
                    }}
                >
                    {icon}
                    <h4 className="font-semibold text-gray-400">{name}</h4>
                </motion.div>

                <div className="relative w-full h-4 rounded-md bg-background2">
                    <span className="absolute left-[-1.4rem] text-[0.8rem] top-[-0.13rem] text-gray-500">
                        0%
                    </span>
                    <span className="absolute right-[-2.3rem] text-[0.8rem] top-[-0.13rem] text-gray-500">
                        100%
                    </span>
                    <div className="relative mx-1 mt-1">
                        <motion.div
                            style={{ width: percentage + "%" }}
                            className="relative h-2 rounded-md bg-neonGreen"
                            whileInView={{ width: percentage + "%" }}
                            viewport={{ once: true }}
                            initial={{ width: 0 }}
                            transition={{
                                duration: 0.5,
                            }}
                        >
                            <span
                                ref={spanref}
                                className="absolute top-[-1.6rem] text-[0.8rem] text-neonGreen font-semibold right-[-0.8rem]"
                            >
                                {percentage.toString() + "%"}
                            </span>
                        </motion.div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Skills;

